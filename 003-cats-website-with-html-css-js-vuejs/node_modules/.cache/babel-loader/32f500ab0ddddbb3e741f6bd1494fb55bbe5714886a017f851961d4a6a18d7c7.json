{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"cat-container\",\n  \"aria-label\": \"Decorative Cat Image\"\n};\nconst _hoisted_2 = {\n  class: \"cat\"\n};\nconst _hoisted_3 = [\"src\", \"alt\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" Cat Image Section \"), _createElementVNode(\"section\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"img\", {\n    src: $setup.image.path,\n    alt: $setup.image.alt\n  }, null, 8 /* PROPS */, _hoisted_3), _createCommentVNode(\" Add aria-hidden attribute to the following tags to hide them from screen readers\\n                ---- Because those are only decorative elements that will be shown around the image \"), _cache[0] || (_cache[0] = _createElementVNode(\"div\", {\n    class: \"inner-circle\",\n    \"aria-hidden\": \"true\"\n  }, null, -1 /* HOISTED */)), _cache[1] || (_cache[1] = _createElementVNode(\"div\", {\n    class: \"outer-circle\",\n    \"aria-hidden\": \"true\"\n  }, null, -1 /* HOISTED */))])])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementBlock","_Fragment","_createCommentVNode","_createElementVNode","_hoisted_1","_hoisted_2","src","$setup","image","path","alt","_hoisted_3"],"sources":["/home/ak/vuejs/bootfi-vuejs-road-map/003-cats-website-with-html-css-js-vuejs/src/components/DecorativeCatImg.vue"],"sourcesContent":["<template>\n    <!-- Cat Image Section -->\n    <section class=\"cat-container\" aria-label=\"Decorative Cat Image\">\n        <div class=\"cat\">\n            <img :src=\"image.path\" :alt=\"image.alt\">\n\n            <!-- Add aria-hidden attribute to the following tags to hide them from screen readers\n                ---- Because those are only decorative elements that will be shown around the image -->\n            <div class=\"inner-circle\" aria-hidden=\"true\"></div>\n            <div class=\"outer-circle\" aria-hidden=\"true\"></div>\n        </div>\n    </section>\n</template>\n\n<script>\nimport {ref} from 'vue'\nimport catImgPNG from '@/assets/cat.png'\n\nexport default {\n    setup() {\n        const image = ref({\n            path: catImgPNG,\n            alt: 'Happy cat enjoying its food'\n        });\n\n        return {image}\n    }\n}\n</script>"],"mappings":";;EAEaA,KAAK,EAAC,eAAe;EAAC,YAAU,EAAC;;;EACjCA,KAAK,EAAC;AAAK;mBAHxB;;uBAAAC,mBAAA,CAAAC,SAAA,SACIC,mBAAA,uBAA0B,EAC1BC,mBAAA,CASU,WATVC,UASU,GARND,mBAAA,CAOM,OAPNE,UAOM,GANFF,mBAAA,CAAwC;IAAlCG,GAAG,EAAEC,MAAA,CAAAC,KAAK,CAACC,IAAI;IAAGC,GAAG,EAAEH,MAAA,CAAAC,KAAK,CAACE;0BAJ/CC,UAAA,GAMYT,mBAAA,2LAC2F,E,0BAC3FC,mBAAA,CAAmD;IAA9CJ,KAAK,EAAC,cAAc;IAAC,aAAW,EAAC;yDACtCI,mBAAA,CAAmD;IAA9CJ,KAAK,EAAC,cAAc;IAAC,aAAW,EAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}